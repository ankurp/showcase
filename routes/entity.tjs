var Deferrals = require('../lib/deferrals');
var Entity = require('../lib/entity.tjs');
var async = require('async');
var controls = require('../lib/fields').controls;

var coalesceArray = function(data) {
	return Array.isArray(data) ? data : [ data ];
};

exports.initialize = function(app) {

	var models = app.dreamer.models;
	var workspaceLoader = app.flight.middleware.workspaceLoader;
	var workspaceAdmin = app.flight.middleware.workspacePermission('administrator');

	app.get("/workspaces/:workspace_handle/collections", workspaceLoader, workspaceAdmin, function(req, res) {

		var entities, entity_counts;
		var workspace_handle = req.params.workspace_handle;

		await {

			var deferrals = new Deferrals(defer(), defer());

			Entity.findAll({
				error: req.error,
				workspace_handle: workspace_handle,
				success: function(_entities) {
					entities = _entities;
					deferrals.run();
				}
			});

			Entity.itemCounts({
				error: req.error,
				workspace_handle: workspace_handle,
				success: function(_entity_counts) {
					entity_counts = _entity_counts;
					deferrals.run();
				}
			});
		}

		res.render("collections.html", { 
			entities: entities,
			entity_counts: entity_counts
		});
	});

	app.get("/workspaces/:workspace_handle/collections/new", workspaceLoader, workspaceAdmin, function(req, res) {

		var workspace = req.flight.workspace;
		var workspace_handle = req.params.workspace_handle;

		var subtitle = ' › New';
		res.render("collection.html", {
			subtitle: subtitle,
			controls: controls
		});
	});

	app.post("/workspaces/:workspace_handle/collections/new", workspaceLoader, workspaceAdmin, function(req, res) {

		var title = req.body.title;
		var description = req.body.description;
		var name = req.body.name;
		var workspace = req.flight.workspace;

		var fields = [];
		var field_attributes = {};

		Entity.field_attribute_names.forEach(function(name) {
			var data = req.body["field_" + name];
			field_attributes[name] = Array.isArray(data) ? data : [ data ];
		});

		field_attributes.name.forEach(function(field_name, index) {

			var field_data = { name: field_name };

			Entity.field_attribute_names.forEach(function(name) {
				if (name == 'name') return;
				field_data[name] = field_attributes[name][index];
			});

			fields.push(field_data);
		});

		Entity.create({
			title: title,
			description: description,
			name: name,
			workspace_handle: workspace.handle,
			fields: fields,
			error: req.error,
			success: function() {
				req.flash('success', 'Created new collection');
				res.redirect('/workspaces/' + workspace.handle + '/collections');
			}
		});
	});

	app.post("/workspaces/:workspace_handle/collections/:id/edit", workspaceLoader, workspaceAdmin, function(req, res) {

		var entity_id = req.params.id;

		var title = req.body.title;
		var description = req.body.description;
		var name = req.body.name;
		var workspace = req.flight.workspace;

		var fields = [];
		var field_attributes = {};

		Entity.field_attribute_names.forEach(function(name) {
			var data = req.body["field_" + name];
			field_attributes[name] = Array.isArray(data) ? data : [ data ];
		});

		field_attributes.name.forEach(function(field_name, index) {

			var field_data = { name: field_name, entity_id: entity_id };

			Entity.field_attribute_names.forEach(function(name) {
				if (name == 'name') return;
				field_data[name] = field_attributes[name][index];
			});

			fields.push(field_data);
		});

		Entity.update({
			id: entity_id,
			title: title,
			description: description,
			name: name,
			fields: fields,
			error: req.error,
			success: function(entity) {
				req.flash('info', 'Saved ' +  entity.title + ' Collection');
				res.redirect('/workspaces/' + workspace.handle + '/collections');
			}
		});
	});

	app.get("/workspaces/:workspace_handle/collections/:id/edit", workspaceLoader, workspaceAdmin, function(req, res) {

		var entity_id = req.params.id;

		Entity.find({
			id: entity_id,
			error: req.error,
			success: function(entity) {
				res.render("collection.html", {
					controls: controls,
					entity: entity,
					fields: entity.fields,
					subtitle: " › " + entity.title 
				});
			}
		});
	});

	app.del("/workspaces/:workspace_handle/collections/:id", workspaceLoader, workspaceAdmin, function(req, res) {

		var entity_id = req.params.id;
		var workspace = req.flight.workspace;

		Entity.destroy({
			id: entity_id,
			error: req.error,
			success: function() { 
				res.redirect("/workspaces/" + workspace.handle + "/collections");
			}
		});
	});

};

