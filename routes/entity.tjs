var Deferrals = require('../lib/deferrals');
var Entity = require('../lib/entity.tjs');
var async = require('async');
var controls = require('../lib/fields').controls;

var coalesceArray = function(data) {
	return Array.isArray(data) ? data : [ data ];
};

exports.initialize = function(app) {

	var models = app.dreamer.models;

	app.get("/admin/entities", function(req, res) {

		Entity.findAll({
			error: req.error,
			success: function(entities) {
				res.render("collections.html", { entities: entities });
			},
		});
	});

	app.get("/admin/entities/new", function(req, res) {

		var subtitle = ' › New';
		res.render("collection.html", {
			subtitle: subtitle,
			controls: controls
		});

	});

	app.post("/admin/entities/new", function(req, res) {

		var title = req.body.title;
		var description = req.body.description;
		var name = req.body.name;

		var fields = [];
		var field_attributes = {};

		Entity.field_attribute_names.forEach(function(name) {
			var data = req.body["field_" + name];
			field_attributes[name] = Array.isArray(data) ? data : [ data ];
		});

		field_attributes.name.forEach(function(field_name, index) {

			var field_data = { name: field_name };

			Entity.field_attribute_names.forEach(function(name) {
				if (name == 'name') return;
				field_data[name] = field_attributes[name][index];
			});

			fields.push(field_data);
		});

		Entity.create({
			title: title,
			description: description,
			name: name,
			fields: fields,
			error: req.error,
			success: function() {
				req.flash('success', 'Created new collection');
				res.redirect('/admin/entities');
			}
		});
	});

	app.post("/admin/entities/:id/edit", function(req, res) {

		var entity_id = req.params.id;

		var title = req.body.title;
		var description = req.body.description;
		var name = req.body.name;

		var fields = [];
		var field_attributes = {};

		Entity.field_attribute_names.forEach(function(name) {
			var data = req.body["field_" + name];
			field_attributes[name] = Array.isArray(data) ? data : [ data ];
		});

		field_attributes.name.forEach(function(field_name, index) {

			var field_data = { name: field_name, entity_id: entity_id };

			Entity.field_attribute_names.forEach(function(name) {
				if (name == 'name') return;
				field_data[name] = field_attributes[name][index];
			});

			fields.push(field_data);
		});

		Entity.update({
			id: entity_id,
			title: title,
			description: description,
			name: name,
			fields: fields,
			error: req.error,
			success: function(entity) {
				req.flash('info', 'Saved ' +  entity.title + ' Collection');
				res.redirect('/admin/entities');
			}
		});
	});

	app.get("/admin/entities/:id/edit", function(req, res) {

		var entity_id = req.params.id;

		Entity.find({
			id: entity_id,
			error: req.error,
			success: function(entity) {
				res.render("collection.html", {
					controls: controls,
					entity: entity,
					fields: entity.fields,
					subtitle: " › " + entity.title 
				});
			}
		});
	});

	app.del("/admin/entities/:id", function(req, res) {

		var entity_id = req.params.id;

		Entity.destroy({
			id: entity_id,
			error: req.error,
			success: function() { 
				res.redirect("/admin/entities");
			}
		});
	});

};

